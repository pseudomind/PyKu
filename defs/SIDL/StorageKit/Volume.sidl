<bindings name="Haiku::Volume">
	<doc>Exposes the Volume object</doc>
	<binding source="BVolume" target="Haiku::Volume">
		<doc>Exposes the Volume object</doc>
		<functions>
			<constructor overload-name="Empty" />
			<constructor>
				<param name="device" type="dev_t" action="input" />
			</constructor>
			<constructor overload-name="FromVolume">
				<param name="volume" type="const BVolume" action="input" />
			</constructor>
			<destructor />
			<method name="InitCheck">
				<return type="status_t" action="error" success="B_OK" />
			</method>
			<method name="SetTo">
				<param name="device" type="dev_t" action="input" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
			<method name="Unset" />
			<method name="Device">
				<return type="dev_t" action="output" />
			</method>
<!-- TODO: BDirectory object not yet implemented
			<method name="GetRootDirectory">
				<param name="directory" type="BDirectory*" action="input" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
-->
			<method name="Capacity">
				<return type="off_t" action="output" />
			</method>
			<method name="FreeBytes">
				<return type="off_t" action="output" />
			</method>
			<method name="BlockSize">
				<return type="off_t" action="output" />
			</method>
			<method name="GetName">
				<param name="name" type="char" pass-as-pointer="true" action="output" max-string-length="B_FILE_NAME_LENGTH" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
			<method name="SetName">
				<param name="name" type="char*" action="input" max-string-length="B_FILE_NAME_LENGTH" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
<!-- TODO: Resolve issues with Bitmap
			<method name="GetIcon">
				<param name="icon" type="BBitmap*" action="output" />
				<param name="size" type="icon_size" action="input" default="B_LARGE_ICON" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
-->
			<method name="GetIcon" overload-name="GetIconData">
				<param name="data" type="uint8*" pass-as-pointer="true" action="output" string-length="size" />
				<param name="size" type="size_t" pass-as-pointer="true" action="length[data]" />
				<param name="type" type="type_code" pass-as-pointer="true" action="output" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
			<method name="IsRemovable">
				<return type="bool" action="output" />
			</method>
			<method name="IsReadOnly">
				<return type="bool" action="output" />
			</method>
			<method name="IsPersistent">
				<return type="bool" action="output" />
			</method>
			<method name="IsShared">
				<return type="bool" action="output" />
			</method>
			<method name="KnowsMime">
				<return type="bool" action="output" />
			</method>
			<method name="KnowsAttr">
				<return type="bool" action="output" />
			</method>
			<method name="KnowsQuery">
				<return type="bool" action="output" />
			</method>
		</functions>
		<operators>
			<operator name="==" />
			<operator name="!=" />
		</operators>
	</binding>
</bindings>
