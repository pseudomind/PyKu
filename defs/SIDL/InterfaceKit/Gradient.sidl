<bindings name="Haiku::Gradient">
	<doc>Exposes the Gradient object</doc>
	<binding source="BGradient" source-inherits="BArchivable" target="Haiku::Gradient" target-inherits="Haiku::Archivable">
		<doc>Exposes the Gradient object</doc>
		<functions>
			<constructor />
			<constructor overload-name="FromArchive">
				<param name="archive" type="BMessage*" action="input" />
			</constructor>
			<destructor />
			<method name="Archive">
				<param name="data" type="BMessage*" action="output" />
				<param name="deep" type="bool" default="true" action="input" />
				<return type="status_t" action="error" success="B_OK" />
			</method>
			<method name="ColorStopsAreEqual">
				<param name="other" type="BGradient" action="input" />
				<return type="bool" action="output" />
			</method>
			<method name="SetColorStops">
				<param name="other" type="BGradient" action="input" />
			</method>
			<method name="AddColor">
				<param name="color" type="const rgb_color" action="input" />
				<param name="offset" type="float" action="input" />
				<return type="int32" action="output" />
			</method>
			<method name="AddColorStop">
				<param name="colorStop" type="const BGradient::ColorStop" action="input" />
				<param name="index" type="int32" action="input" />
				<return type="bool" action="output" />
			</method>
			<method name="RemoveColor">
				<param name="index" type="int32" action="input" />
				<return type="bool" action="output" />
			</method>
			<method name="SetColorStop">
				<param name="index" type="int32" action="input" />
				<param name="colorStop" type="const BGradient::ColorStop" action="input" />
				<return type="bool" action="output" />
			</method>
			<method name="SetColor">
				<param name="index" type="int32" action="input" />
				<param name="color" type="const rgb_color" action="input" />
				<return type="bool" action="output" />
			</method>
			<method name="SetOffset">
				<param name="index" type="int32" action="input" />
				<param name="offset" type="float" action="input" />
				<return type="bool" action="output" />
			</method>
			<method name="CountColorStops">
				<return type="int32" action="output" />
			</method>
			<method name="ColorStopAt">
				<param name="index" type="int32" action="input" />
				<return type="BGradient::ColorStop*" action="output" />
			</method>
			<method name="ColorStopAtFast">
				<param name="index" type="int32" action="input" />
				<return type="BGradient::ColorStop*" action="output" />
			</method>
			<method name="ColorStops">
				<return type="BGradient::ColorStop" pass-as-pointer="true" action="output" array-length="SELF.CountColorStops()" />
			</method>
			<method name="SortColorStopsByOffset" />
			<method name="GetType">
				<return type="BGradient::Type" action="output" />
			</method>
			<method name="MakeEmpty" />
		</functions>
		<operators>
			<operator name="==" />
			<operator name="!=" />
		</operators>
		<constants>
			<constant name="BGradient::TYPE_LINEAR" type="int" group="Type" />
			<constant name="BGradient::TYPE_RADIAL" type="int" group="Type" />
			<constant name="BGradient::TYPE_RADIAL_FOCUS" type="int" group="Type" />
			<constant name="BGradient::TYPE_DIAMOND" type="int" group="Type" />
			<constant name="BGradient::TYPE_CONIC" type="int" group="Type" />
			<constant name="BGradient::TYPE_NONE" type="int" group="Type" />
		</constants>
	</binding>
	<binding source="BGradient::ColorStop" target="Haiku::Gradient::ColorStop">
		<properties>
			<property name="color" type="rgb_color" />
			<property name="offset" type="float" />
		</properties>
		<functions>
			<constructor>
				<param name="color" type="rgb_color" action="input" />
				<param name="offset" type="float" action="input" />
			</constructor>
			<constructor overload-name="FromRGB">
				<param name="red"   type="uint8" action="input" />
				<param name="green" type="uint8" action="input" />
				<param name="blue"  type="uint8" action="input" />
				<param name="alpha" type="uint8" action="input" />
				<param name="offset" type="float" action="input" />
			</constructor>
			<constructor overload-name="FromColorStop">
				<param name="other" type="BGradient::ColorStop" action="input" />
			</constructor>
			<constructor overload-name="Empty" />
			<destructor />
		</functions>
		<operators>
			<operator name="!=" />
		</operators>
	</binding>
</bindings>
